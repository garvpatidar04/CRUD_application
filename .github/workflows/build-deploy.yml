name: Build and Deploy our Code wi

on: [push, pull_request]

jobs:
  my_first_job:

    environment: 
      name: testing
    env:
      database_hostname: ${{secrets.database_hostname}}
      database_port: ${{secrets.database_port}}
      database_username: ${{secrets.database_username}}
      database_name: ${{secrets.database_name}}
      database_password: ${{secrets.database_password}}
      secret_key: ${{secrets.secret_key}}
      algorithm: ${{secrets.algorithm}}
      access_token_expire_minutes: ${{secrets.access_token_expire_minutes}}
      
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.database_password}}
          POSTGRES_DB: ${{secrets.database_name}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
                
    runs-on: ubuntu-latest

    steps:
      - name: pulling our code from repo
        uses: actions/checkout@v4
      - name: setting up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.5'
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Installing dependencies
        run: pip install -r requirements.txt
      - name: Setting up environment variables
        run: |
          echo "DATABASE_HOSTNAME=${{secrets.database_hostname}}"
          echo "DATABASE_NAME=${{secrets.database_name}}"
      
      - name: Install PostgreSQL client   
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client

      - name: Verify PostgreSQL credentials
        run: |
            echo "Testing connection..."
            PGPASSWORD=${{secrets.DATABASE_PASSWORD}} psql -h ${{secrets.DATABASE_HOSTNAME}} -U ${{secrets.DATABASE_USERNAME}} -d ${{ secrets.DATABASE_NAME }} -c '\conninfo'

      - name: Running tests
        run: |
          pytest
